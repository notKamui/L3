>>> from graphe import *
>>> from ameliorations import *

# charger_donnees
>>> reseau = Graphe()
>>> charger_donnees(reseau, "METRO_7b.txt")
>>> sorted(reseau.sommets())
[1635, 1756, 1797, 1860, 1900, 2002, 2013, 2075]
>>> sorted(map(reseau.nom_sommet, reseau.sommets()))
['Bolivar', 'Botzaris', 'Buttes-Chaumont', 'Danube', 'Jaurès', 'Louis Blanc', 'Place des Fêtes', 'Pré-Saint-Gervais']
>>> sorted(reseau.aretes())  # doctest: +NORMALIZE_WHITESPACE
[(1635, 1756, 'METRO_7b'), (1635, 2002, 'METRO_7b'), (1756, 1797, 'METRO_7b'), (1797, 2002, 'METRO_7b'), (1860, 1900, 'METRO_7b'), (1900, 2075, 'METRO_7b'), (2002, 2013, 'METRO_7b'), (2013, 2075, 'METRO_7b')]

# points_articulation
>>> sorted(points_articulation(reseau))
[1900, 2002, 2013, 2075]

# ponts
>>> sorted(map(sorted, ponts(reseau)))
[[1860, 1900], [1900, 2075], [2002, 2013], [2013, 2075]]

# amelioration_ponts
>>> rer = Graphe()
>>> charger_donnees(rer, "RER_A.txt")
>>> charger_donnees(rer, "RER_B.txt")
>>> len(ponts(rer))
91
>>> tmp = amelioration_ponts(rer)
>>> for u, v in tmp: 
...     rer.ajouter_arete(u, v, "RER")
>>> len(ponts(rer))
0

# amelioration_points_articulation
>>> rer = Graphe()
>>> charger_donnees(rer, "RER_A.txt")
>>> charger_donnees(rer, "RER_B.txt")
>>> len(points_articulation(rer))
83
>>> tmp = amelioration_points_articulation(rer)
>>> for u, v in tmp:
...     rer.ajouter_arete(u, v, "RER")
>>> len(points_articulation(rer))
0